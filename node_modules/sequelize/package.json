{
  "_from": "sequelize",
  "_id": "sequelize@4.41.0",
  "_inBundle": false,
  "_integrity": "sha512-6zCYxjPriUBgLQ5dN4ZxC5eadUtRu2tHFoBiSU9vNGb6G3f4bZM6vFpJu0DhxeeyhodTAXqY1GaBpZzT3PXB/Q==",
  "_location": "/sequelize",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "sequelize",
    "fetchSpec": "latest",
    "name": "sequelize",
    "raw": "sequelize",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sequelize/-/sequelize-4.41.0.tgz",
  "_shasum": "fa24ac0471e398090b55b302579240ed58e0b54a",
  "_shrinkwrap": null,
  "_spec": "sequelize",
  "_where": "E:\\voice\\voice-google - github",
  "author": {
    "email": "sascha@depold.com",
    "name": "Sascha Depold"
  },
  "bugs": {
    "url": "https://github.com/sequelize/sequelize/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "contributors": [
    {
      "email": "sascha@depold.com",
      "name": "Sascha Depold"
    },
    {
      "email": "janzeh@gmail.com,jmei@itu.dk",
      "name": "Jan Aagaard Meier"
    },
    {
      "email": "me@danieldurante.com",
      "name": "Daniel Durante"
    },
    {
      "email": "mick.kasper.hansen@gmail.com",
      "name": "Mick Hansen"
    },
    {
      "email": "sushantdhiman@outlook.com",
      "name": "Sushant Dhiman"
    }
  ],
  "dependencies": {
    "bluebird": "^3.5.0",
    "cls-bluebird": "^2.1.0",
    "debug": "^3.1.0",
    "depd": "^1.1.0",
    "dottie": "^2.0.0",
    "generic-pool": "^3.4.0",
    "inflection": "1.12.0",
    "lodash": "^4.17.1",
    "moment": "^2.20.0",
    "moment-timezone": "^0.5.14",
    "retry-as-promised": "^2.3.2",
    "semver": "^5.5.0",
    "terraformer-wkt-parser": "^1.1.2",
    "toposort-class": "^1.0.1",
    "uuid": "^3.2.1",
    "validator": "^10.4.0",
    "wkx": "^0.4.1"
  },
  "deprecated": false,
  "description": "Multi dialect ORM for Node.JS",
  "devDependencies": {
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "chai-datetime": "^1.5.0",
    "chai-spies": "^1.0.0",
    "cheerio": "^1.0.0-rc.2",
    "commitizen": "^2.9.6",
    "continuation-local-storage": "^3.2.0",
    "cross-env": "^5.0.5",
    "cz-conventional-changelog": "^2.0.0",
    "env-cmd": "^7.0.0",
    "esdoc": "^0.5.2",
    "eslint": "^4.16.0",
    "eslint-plugin-mocha": "^4.11.0",
    "hints": "^1.1.0",
    "husky": "^0.14.2",
    "istanbul": "^0.4.5",
    "lcov-result-merger": "^2.0.0",
    "mocha": "^5.0.4",
    "mysql2": "^1.x",
    "pg": "^7.x",
    "pg-hstore": "^2.3.2",
    "pg-native": "^2.x",
    "pg-types": "^1.x",
    "rimraf": "^2.5.4",
    "semantic-release": "^15.0.0",
    "sinon": "^4.3.0",
    "sinon-chai": "^2.14.0",
    "sqlite3": "^3.x",
    "tedious": "1.14.0",
    "uuid-validate": "^0.0.2",
    "validate-commit-msg": "^2.12.2"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "homepage": "https://github.com/sequelize/sequelize#readme",
  "keywords": [
    "mysql",
    "sqlite",
    "postgresql",
    "postgres",
    "mssql",
    "orm",
    "nodejs",
    "object relational mapper"
  ],
  "license": "MIT",
  "main": "index",
  "name": "sequelize",
  "optionalDependencies": {},
  "options": {
    "env_cmd": "./test/config/.docker.env",
    "mocha": "--globals setImmediate,clearImmediate --ui tdd --exit --check-leaks --colors -t 30000 --reporter spec"
  },
  "publishConfig": {
    "tag": "latest"
  },
  "readme": "# Sequelize\r\n\r\n[![npm version](https://img.shields.io/npm/v/sequelize.svg)](https://www.npmjs.com/package/sequelize)\r\n[![Build Status](https://travis-ci.org/sequelize/sequelize.svg?branch=master)](https://travis-ci.org/sequelize/sequelize)\r\n[![Windows Build status](https://ci.appveyor.com/api/projects/status/9l1ypgwsp5ij46m3/branch/master?svg=true)](https://ci.appveyor.com/project/sushantdhiman/sequelize/branch/master)\r\n[![codecov](https://codecov.io/gh/sequelize/sequelize/branch/master/graph/badge.svg)](https://codecov.io/gh/sequelize/sequelize)\r\n[![Bountysource](https://www.bountysource.com/badge/team?team_id=955&style=bounties_received)](https://www.bountysource.com/teams/sequelize/issues?utm_source=Sequelize&utm_medium=shield&utm_campaign=bounties_received)\r\n[![Slack Status](http://sequelize-slack.herokuapp.com/badge.svg)](http://sequelize-slack.herokuapp.com/)\r\n[![npm downloads](https://img.shields.io/npm/dm/sequelize.svg?maxAge=2592000)](https://www.npmjs.com/package/sequelize)\r\n![node](https://img.shields.io/node/v/sequelize.svg)\r\n[![License](https://img.shields.io/npm/l/sequelize.svg?maxAge=2592000?style=plastic)](https://github.com/sequelize/sequelize/blob/master/LICENSE)\r\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\r\n[![Greenkeeper badge](https://badges.greenkeeper.io/sequelize/sequelize.svg)](https://greenkeeper.io/)\r\n\r\nSequelize is a promise-based Node.js ORM for Postgres, MySQL, SQLite and Microsoft SQL Server. It features solid transaction support, relations, read replication and more.\r\n\r\n## Table of Contents\r\n- [Installation](#installation)\r\n- [Features](#features)\r\n- [Responsible disclosure](#responsible-disclosure)\r\n- [Documentation](#documentation)\r\n- [Resources](#resources)\r\n\r\n## Installation\r\n\r\n```bash\r\n$ npm install --save sequelize\r\n\r\n# And one of the following:\r\n$ npm install --save pg pg-hstore\r\n$ npm install --save mysql2\r\n$ npm install --save sqlite3\r\n$ npm install --save tedious # MSSQL\r\n```\r\n\r\nSequelize follows [SEMVER](http://semver.org). Supports Node v4 and above to use ES6 features.\r\n\r\n## Features\r\n\r\n- Schema definition\r\n- Schema synchronization/dropping\r\n- 1:1, 1:M & N:M Associations\r\n- Through models\r\n- Promises\r\n- Hooks/callbacks/lifecycle events\r\n- Prefetching/association including\r\n- Transactions\r\n- Migrations\r\n- CLI ([sequelize-cli](https://github.com/sequelize/cli))\r\n\r\n## Responsible disclosure\r\nIf you have any security issue to report, contact project maintainers privately. You can find contact information [here](https://github.com/sequelize/sequelize/blob/master/CONTACT.md)\r\n\r\n## Documentation\r\n- [Contributing](https://github.com/sequelize/sequelize/blob/master/CONTRIBUTING.md)\r\n- [v4 Documentation](http://docs.sequelizejs.com)\r\n- [v3 Documentation](https://sequelize.readthedocs.io/en/v3/)\r\n- [v3 to v4 Upgrade Guide](http://docs.sequelizejs.com/manual/tutorial/upgrade-to-v4.html)\r\n\r\n## Resources\r\n- [Changelog](https://github.com/sequelize/sequelize/releases)\r\n- [Slack](http://sequelize-slack.herokuapp.com/)\r\n- [Google Groups](https://groups.google.com/forum/#!forum/sequelize)\r\n\r\n### Tools\r\n- [Add-ons & Plugins](https://github.com/sequelize/sequelize/wiki/Add-ons-&-Plugins)\r\n- [Sequelize & TypeScript](https://github.com/RobinBuschmann/sequelize-typescript)\r\n\r\n### Learning\r\n- [Getting Started](http://docs.sequelizejs.com/manual/installation/getting-started)\r\n- [Express Example](https://github.com/sequelize/express-example)\r\n\r\n\r\n### Translations\r\n- [English v4](http://docs.sequelizejs.com) (OFFICIAL)\r\n- [中文文档 v4](https://github.com/demopark/sequelize-docs-Zh-CN) (UNOFFICIAL)\r\n\r\n",
  "readmeFilename": "README.md",
  "release": {
    "branch": "v4",
    "verifyConditions": [
      "@semantic-release/npm",
      "@semantic-release/github"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sequelize/sequelize.git"
  },
  "scripts": {
    "commitmsg": "validate-commit-msg",
    "cover": "rimraf coverage && npm run teaser && npm run cover-integration && npm run cover-unit && npm run merge-coverage",
    "cover-integration": "cross-env COVERAGE=true ./node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -t 30000 --exit --ui tdd \"test/integration/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/integration.info')\"",
    "cover-unit": "cross-env COVERAGE=true ./node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -t 30000 --exit --ui tdd \"test/unit/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/unit.info')\"",
    "docs": "esdoc && cp docs/ROUTER esdoc/ROUTER",
    "lint": "eslint lib test --quiet",
    "merge-coverage": "lcov-result-merger \"coverage/*.info\" \"coverage/lcov.info\"",
    "semantic-release": "semantic-release",
    "sscce": "env-cmd $npm_package_options_env_cmd node sscce.js",
    "sscce-mysql": "cross-env DIALECT=mysql npm run sscce",
    "sscce-postgres": "cross-env DIALECT=postgres npm run sscce",
    "sscce-sqlite": "cross-env DIALECT=sqlite npm run sscce",
    "teaser": "node -e \"console.log('#'.repeat(process.env.DIALECT.length + 22) + '\\n# Running tests for ' + process.env.DIALECT + ' #\\n' + '#'.repeat(process.env.DIALECT.length + 22))\"",
    "test": "npm run teaser && npm run test-unit && npm run test-integration",
    "test-all": "npm run test-mysql && npm run test-sqlite && npm run test-postgres && npm run test-postgres-native && npm run test-mssql",
    "test-docker": "npm run test-docker-unit && npm run test-docker-integration",
    "test-docker-integration": "env-cmd $npm_package_options_env_cmd npm run test-integration",
    "test-docker-unit": "npm run test-unit",
    "test-integration": "mocha $npm_package_options_mocha \"test/integration/**/*.test.js\"",
    "test-integration-all": "npm run test-integration-mysql && npm run test-integration-postgres && npm run test-integration-postgres-native && npm run test-integration-mssql && npm run test-integration-sqlite",
    "test-integration-mssql": "cross-env DIALECT=mssql npm run test-integration",
    "test-integration-mysql": "cross-env DIALECT=mysql npm run test-integration",
    "test-integration-postgres": "cross-env DIALECT=postgres npm run test-integration",
    "test-integration-postgres-native": "cross-env DIALECT=postgres-native npm run test-integration",
    "test-integration-sqlite": "cross-env DIALECT=sqlite npm run test-integration",
    "test-mssql": "cross-env DIALECT=mssql npm test",
    "test-mysql": "cross-env DIALECT=mysql npm test",
    "test-pgsql": "npm run test-postgres",
    "test-postgres": "cross-env DIALECT=postgres npm test",
    "test-postgres-native": "cross-env DIALECT=postgres-native npm test",
    "test-postgresn": "npm run test-postgres-native",
    "test-sqlite": "cross-env DIALECT=sqlite npm test",
    "test-unit": "mocha $npm_package_options_mocha \"test/unit/**/*.js\"",
    "test-unit-all": "npm run test-unit-mysql && npm run test-unit-postgres && npm run test-unit-postgres-native && npm run test-unit-mssql && npm run test-unit-sqlite",
    "test-unit-mssql": "cross-env DIALECT=mssql npm run test-unit",
    "test-unit-mysql": "cross-env DIALECT=mysql npm run test-unit",
    "test-unit-postgres": "cross-env DIALECT=postgres npm run test-unit",
    "test-unit-postgres-native": "cross-env DIALECT=postgres-native npm run test-unit",
    "test-unit-sqlite": "cross-env DIALECT=sqlite npm run test-unit"
  },
  "version": "4.41.0"
}
